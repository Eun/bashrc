if [ -z "${PS1_INITIALIZED+1}" ]; then
    PS1_INITIALIZED=1

    #export SOCKS_SERVER=192.168.1.2:1080
    #export socks_server=192.168.1.2:1080
    #export HTTP_PROXY=http://192.168.1.2:3128
    #export http_proxy=http://192.168.1.2:3128
    #export HTTPS_PROXY=http://192.168.1.2:3128
    #export https_proxy=http://192.168.1.2:3128
    #export FTP_PROXY=http://192.168.1.2:3128
    #export ftp_proxy=http://192.168.1.2:3128

    # color some programms
    alias grep='grep --color'
    alias egrep='egrep --color=auto'
    alias fgrep='fgrep --color=auto'
     
    # history search
    bind '"\e[A": history-search-backward'
    bind '"\e[B": history-search-forward'
    bind '"\eOA": history-search-backward'
    bind '"\eOB": history-search-forward'

    if [ "$PS1_SET_TITLE" == "1" ] && [ "$PS1_SET_TITLE_SSH" == "1" ]; then
        # set ssh title
        function SSHWrapper()
        {
            ARGS=$@
            for i in "$ARGS"
            do
                if [[ ! $i =~ ^- ]]; then
                    if [[ ! $i =~ @ ]]; then
                        printf "\e]0;${USER}@${i}\a"
                    else
                        printf "\e]0;${i}\a"
                    fi
                    break;
                fi
            done
            ssh $ARGS
        }


        alias ssh='SSHWrapper $@'
    fi

    # is the hostname valid
    function IsInValidHostName()
    {
        if [[ $1 =~ \. ]];
        then
            return 1
        else
            return 0
        fi
    }

    # Get First IP
    function GetFirstIP()
    {
        if [ -n "${SSH_CONNECTION+1}" ]; then
            count=0
            start=0
            end=0
            for (( i=0; i<${#SSH_CONNECTION}; i++ )); do
                if [[ ${SSH_CONNECTION:$i:1} == " " ]]; then
                    if [ $count -eq 1 ]; then
                        start=$i
                    elif [ $count -eq 2 ]; then
                        end=$i
                        break;
                    fi
                    count=$((count+1))
                fi
            done
            len=${#SSH_CONNECTION}
            len=$((len-end))
            printf ${SSH_CONNECTION:$start:-$len}
            return 0
        fi
        IPS=$(hostname -I 2> /dev/null)
        if [ $? -eq 0 ]; then
            for IP in "${IPS[@]}"
            do
                printf "$IP"
                return 0
            done
        fi
        return 1
    }


    PS1_HOSTNAME=$HOSTNAME
    if IsInValidHostName "$PS1_HOSTNAME"; then
        PS1_HOSTNAME=$(hostname --fqdn 2> /dev/null)
        if IsInValidHostName "$PS1_HOSTNAME"; then
            PS1_HOSTNAME=$(GetFirstIP)
            if [ $? -eq 1 ]; then
                PS1_HOSTNAME=$HOSTNAME
            fi
        fi
    fi


    PS1=''

    if [ "$PS1_SET_TITLE" == "1" ]; then
        PS1=${PS1}'\[\e]0;${USER}@${PS1_HOSTNAME}:${PWD/${HOME}/\~}\a\]'

        if [ -n "${PS1_SET_TITLE_WORKING+1}" ]; then
            trap 'printf "\e]0;${PS1_SET_TITLE_WORKING}${USER}@${PS1_HOSTNAME}:${PWD/${HOME}/\~}\a"' DEBUG
        fi
    fi

    PS1=${PS1}'\['
    if [ -n "${PS1_COLOR_ROOT+1}" ]; then
        PS1=${PS1}'$(
            if [ -n "$EUID" ] && [ $EUID -eq 0 ]; then
                printf "$PS1_COLOR_ROOT"
            else
                printf "$PS1_COLOR_USER"
            fi
        )'
    else
        PS1=${PS1}$PS1_COLOR_USER
    fi
    PS1=${PS1}'\]'
    PS1=${PS1}'${USER}'

    PS1=${PS1}'\['
    PS1=${PS1}$PS1_COLOR_AT
    PS1=${PS1}'\]'
    PS1=${PS1}'@'

    PS1=${PS1}'\['
    PS1=${PS1}$PS1_COLOR_HOSTNAME
    PS1=${PS1}'\]'
    PS1=${PS1}'${PS1_HOSTNAME}'

    PS1=${PS1}'\['
    PS1=${PS1}$PS1_COLOR_COLON
    PS1=${PS1}'\]'
    PS1=${PS1}':'

    PS1=${PS1}'\['
    PS1=${PS1}$PS1_COLOR_PATH
    PS1=${PS1}'\]'
    PS1=${PS1}'${PWD/${HOME}/\~}'


    if [ "$PS1_SHOW_GIT" == "1" ]; then
        PS1=${PS1}'\['
        PS1=${PS1}'$(
            if [ -d ".git" ] || [ $(git rev-parse --git-dir > /dev/null 2>&1; echo $?) -eq 0 ]; then
                if [ $(git diff --no-ext-diff --quiet --cached --exit-code > /dev/null 2>&1; echo $?) -eq 1 ]; then
                     printf "$PS1_COLOR_GIT_AHEAD"
                elif [ $(git diff --no-ext-diff --quiet --exit-code > /dev/null 2>&1; echo $?) -eq 1 ]; then
                    printf "$PS1_COLOR_GIT_MODIFIED"
                else
                    printf "$PS1_COLOR_GIT_UPTODATE"
                fi
                git branch 2>/dev/null | grep "*" | sed "s/* \(.*\)/(\1)/"
            fi)'
        PS1=${PS1}'\]'
    fi

    PS1=${PS1}'\['
    if [ -n "${PS1_COLOR_SHELL_ROOT+1}" ]; then
        PS1=${PS1}'$(
            if [ -n "$EUID" ] && [ $EUID -eq 0 ]; then
                printf "$PS1_COLOR_SHELL_ROOT"
            else
                printf "$PS1_COLOR_SHELL_USER"
            fi
        )'
    else
        PS1=${PS1}$PS1_COLOR_SHELL_USER
    fi
    PS1=${PS1}'\]'
    PS1=${PS1}'\$'


    PS1=${PS1}'\['
    PS1=${PS1}$PS1_COLOR_COMMAND
    PS1=${PS1}'\]'
    PS1=${PS1}' '
    export PS1
fi
